---
- name: "sysctl set net.ipv4.ip_forward = 1"
  sysctl:
    name: "net.ipv4.ip_forward"
    value: 1
    state: present
    sysctl_set: yes
    reload: yes

- name: "sysctl set net.ipv4.conf.all.rp_filter = 0"
  sysctl:
    name: "net.ipv4.conf.all.rp_filter"
    value: 0
    state: present
    sysctl_set: yes
    reload: yes

- name: "sysctl set net.ipv4.conf.default.rp_filter = 0"
  sysctl:
    name: "net.ipv4.conf.default.rp_filter"
    value: 0
    state: present
    sysctl_set: yes
    reload: yes

- name: "sysctl set net.bridge.bridge-nf-call-iptables = 1"
  sysctl:
    name: "net.bridge.bridge-nf-call-iptables"
    value: 1
    state: present
    sysctl_set: yes
    reload: yes
  ignore_errors: True

- name: "sysctl set net.bridge.bridge-nf-call-ip6tables = 1"
  sysctl:
    name: "net.bridge.bridge-nf-call-ip6tables"
    value: 1
    state: present
    sysctl_set: yes
    reload: yes
  ignore_errors: True

- name: Install Neutron Packages in Ubuntu
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - neutron-plugin-ml2
    - neutron-plugin-openvswitch-agent
    - neutron-l3-agent

# Assertion: No host belongs to more than one group
- name: "Intermediate processing: Extracting domain names from services"
  set_fact:
    hosts_list: |
        {% set res = [] -%}
        {% for host in hostvars.keys() -%}
          {% set ignored = res.extend([{ 'name': host, 'group': hostvars[host]['group_names'][0], 'mgmt_ip': hostvars[host].mgmt_ip, 'ctrl_ip': hostvars[host].ctrl_ip, 'data_ip': hostvars[host].data_ip, 'mgmt_ip_womask': (hostvars[host].mgmt_ip | ipaddr('address')), 'ctrl_ip_womask': (hostvars[host].ctrl_ip | ipaddr('address')), 'data_ip_womask': (hostvars[host].data_ip | ipaddr('address')) }]) -%}
        {%- endfor %}
        {{ res }}

# Assertion: Only one control host exists
- name: "Intermediate processing: Control host"
  set_fact:
    controller: "{{ hosts_list | selectattr('group', 'match', '^'+'openstack_control'+'$') | list | first }}"

- name: Template neutron.conf
  template:
    src: neutron.conf.j2
    dest: /etc/neutron/neutron.conf
    mode: 0644
    owner: root
    group: neutron
    backup: yes

- name: Template l3_agent.ini
  template:
    src: l3_agent.ini.j2
    dest: /etc/neutron/l3_agent.ini
    mode: 0644
    owner: root
    group: neutron
    backup: yes

- name: Template metadata_agent.ini
  template:
    src: metadata_agent.ini.j2
    dest: /etc/neutron/metadata_agent.ini
    mode: 0644
    owner: root
    group: neutron
    backup: yes

- name: Template ml2_conf.ini
  template:
    src: ml2_conf.ini.j2
    dest: /etc/neutron/plugins/ml2/ml2_conf.ini
    mode: 0644
    owner: root
    group: neutron
    backup: yes

- name: Template openvswitch_agent.ini
  template:
    src: openvswitch_agent.ini.j2
    dest: /etc/neutron/plugins/ml2/openvswitch_agent.ini
    mode: 0644
    owner: root
    group: neutron
    backup: yes

- name: Reload services
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
  - nova-compute
  - neutron-openvswitch-agent
  - neutron-l3-agent
  - neutron-metadata-agent
