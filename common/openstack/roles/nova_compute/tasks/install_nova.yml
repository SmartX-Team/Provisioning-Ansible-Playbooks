---
- name: Install Nova Packages in Ubuntu
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - nova-compute

- name: "Intermediate processing: Set the virtualization to KVM"
  set_fact:
    virt_type: "kvm"

- name: "Intermediate processing: Check the compute host's hardware acceleration capability. Is it running on an OpenStack Instance?"
  register: hw_acc
  shell: "dmidecode -s system-manufacturer | grep \"OpenStack\" | wc -l"
# shell: "egrep -c '(vmx|svm)' /proc/cpuinfo"

- name: "Intermediate processing: Change the virtualization to QEMU"
  set_fact:
    virt_type: "qemu"
  when: "hw_acc.stdout | int != 0"

# Assertion: No host belongs to more than one group
- name: "Intermediate processing: Extracting domain names from services"
  set_fact:
    hosts_list: |
        {% set res = [] -%}
        {% for host in hostvars.keys() -%}
          {% set ignored = res.extend([{ 'name': host, 'group': hostvars[host]['group_names'][0], 'mgmt_ip': hostvars[host].mgmt_ip, 'ctrl_ip': hostvars[host].ctrl_ip, 'data_ip': hostvars[host].data_ip, 'mgmt_ip_womask': (hostvars[host].mgmt_ip | ipaddr('address')), 'ctrl_ip_womask': (hostvars[host].ctrl_ip | ipaddr('address')), 'data_ip_womask': (hostvars[host].data_ip | ipaddr('address')) }]) -%}
        {%- endfor %}
        {{ res }}

# Assertion: Only one control host exists
- name: "Intermediate processing: Control host"
  set_fact:
    controller: "{{ hosts_list | selectattr('group', 'match', '^'+'openstack_control'+'$') | list | first }}"

- name: Template nova.conf
  template:
    src: nova.conf.j2
    dest: /etc/nova/nova.conf
    mode: 0644
    owner: root
    group: nova
    backup: yes

- name: Template nova.conf
  template:
    src: nova-compute.conf.j2
    dest: /etc/nova/nova-compute.conf
    mode: 0644
    owner: root
    group: nova
    backup: yes

- name: Verify registered cells
  delegate_to: "{{ controller.mgmt_ip_womask }}"
  remote_user: ubuntu
  become_user: nova
  become: true
  command: nova-manage cell_v2 list_cells

- name: Reload services
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
  - nova-compute

- name: Register the compute node to the controller
  delegate_to: "{{ controller.mgmt_ip_womask }}"
  remote_user: ubuntu
  become_user: root
  become: true
  shell: ". /root/admin-openrc.sh && openstack compute service list --service nova-compute -f json"

- name: Register the compute node to the controller
  delegate_to: "{{ controller.mgmt_ip_womask }}"
  remote_user: ubuntu
  become_user: nova
  become: true
  command: "nova-manage cell_v2 discover_hosts --verbose"
