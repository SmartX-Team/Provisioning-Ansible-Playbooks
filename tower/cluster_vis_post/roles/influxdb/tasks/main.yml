---
# tasks file for influxdb
- name: Installing Ubuntu Packages for Python
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - python
    - python-pip

- name: Installing Python Packages for InfluxDB
  pip:
    name: "{{ item }}"
    state: present
  with_items:
    - requests
    - influxdb

- name: Downloading InfluxDB {{ influxdb_version }} DEB file
  get_url:
    url: https://dl.influxdata.com/influxdb/releases/influxdb_{{ influxdb_version }}_amd64.deb
    dest: /tmp/influxdb.deb

- name: Installing InfluxDB {{ influxdb_version }} from the DEB file
  apt:
    deb: /tmp/influxdb.deb

- name: Start InfluxDB Service
  systemd:
    name: influxd
    state: started
    enabled: yes

- name: Get Request to InfluxDB for checking authentication enabled
  uri:
    url: "http://localhost:8086/query"
    status_code: 400, 401
  register: influx_auth_enabled

- name: Creating InfluxDB Admin Account without Credential
  influxdb_user:
    user_name: "{{ influxdb_admin_id }}"
    user_password: "{{ influxdb_admin_password }}"
    admin: yes
    state: present
  when: influx_auth_enabled.status == 400

- name: Creating InfluxDB Admin Account with Admin Credential
  influxdb_user:
    user_name: "{{ influxdb_admin_id }}"
    user_password: "{{ influxdb_admin_password }}"
    login_username: "{{ influxdb_admin_id }}"
    login_password: "{{ influxdb_admin_password }}"
    admin: yes
    state: present
  when: influx_auth_enabled.status == 401

- name: Creating InfluxDB User Account
  influxdb_user:
    user_name: "{{ influxdb_user_id }}"
    user_password: "{{ influxdb_user_password }}"
    login_username: "{{ influxdb_admin_id }}"
    login_password: "{{ influxdb_admin_password }}"
    admin: yes
    state: present

- name: Templating influxdb.conf
  template:
    src: influxdb.conf.j2
    dest: /etc/influxdb/influxdb.conf
    owner: root
    group: root
    mode: 0644
    backup: yes
  notify: Restart InfluxDB Service
- meta: flush_handlers
